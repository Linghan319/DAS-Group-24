---
title: "Spam Email Classification Analysis"
author: "DAS Group 24"
number-sections: true
format: 
  html:
    embed-resources: true
    code-tools: true
  pdf: default
editor_options: 
  chunk_output_type: console
execute:
  echo: true
  eval: true
  warning: false
  message: false
---

# Introduction

This report analyzes the characteristics of spam emails using a Generalized Linear Model (GLM).

# Exploratory Data Analysis

```{r}
# Load required libraries
library(tidyverse)    
library(moderndive)   
library(gapminder)    
library(stats)        
library(jtools)       
library(sjPlot)       
```

```{r}
# Read the CSV file
spam_data <- read.csv("C:/Users/2986889l/Desktop/New folder/dataset24.csv")

# Convert the 'yesno' column to a factor with levels 'n' for 'no' and 'y' for 'yes'
spam_data <- spam_data %>%
  mutate(yesno = factor(yesno, levels = c("n", "y")))

# View the structure of the dataset
glimpse(spam_data)

# Summarize the missing values in each column
spam_data %>%
  summarise_all(~ sum(is.na(.)))
```

```{r}
library(gridExtra)
# Create boxplots for each variable
p1 <- ggplot(spam_data, aes(x = yesno, y = crl.tot, fill = yesno)) + 
  geom_boxplot() + 
  labs(x = "Whether it is spam", y = "Length of crl") +
  theme_minimal() +
  coord_cartesian(ylim = c(0, quantile(spam_data$crl.tot, 0.95)))

p2 <- ggplot(spam_data, aes(x = yesno, y = dollar, fill = yesno)) + 
  geom_boxplot() + 
  labs(x = "Whether it is spam", y = "dollar") +
  theme_minimal() +
  coord_cartesian(ylim = c(0, quantile(spam_data$dollar, 0.95)))

p3 <- ggplot(spam_data, aes(x = yesno, y = bang, fill = yesno)) + 
  geom_boxplot() + 
  labs(x = "Whether it is spam", y = "bang") +
  theme_minimal() +
  coord_cartesian(ylim = c(0, quantile(spam_data$bang, 0.95)))

p4 <- ggplot(spam_data, aes(x = yesno, y = money, fill = yesno)) + 
  geom_boxplot() + 
  labs(x = "Whether it is spam", y = "money") +
  theme_minimal() +
  coord_cartesian(ylim = c(0, quantile(spam_data$money, 0.95)))

p5 <- ggplot(spam_data, aes(x = yesno, y = n000, fill = yesno)) + 
  geom_boxplot() + 
  labs(x = "Whether it is spam", y = "n000") +
  theme_minimal() +
  coord_cartesian(ylim = c(0, quantile(spam_data$n000, 0.95)))

p6 <- ggplot(spam_data, aes(x = yesno, y = make, fill = yesno)) + 
  geom_boxplot() + 
  labs(x = "Whether it is spam", y = "make") +
  theme_minimal() +
  coord_cartesian(ylim = c(0, quantile(spam_data$make, 0.95)))

# Arrange all boxplots into a single canvas
grid.arrange(p1, p2, p3, p4, p5, p6, ncol = 2)
```

# Binary logistic regression

```{r}
# Log-transform the selected numeric columns
spam_data <- spam_data %>%
  mutate(across(c(crl.tot, dollar, bang, money, n000, make), 
                ~ log(. + 1), .names = "log_{.col}"))
```

```{r}
# Fit a logistic regression model
glm <- glm(yesno ~ log_crl.tot + log_dollar + log_bang + log_money + log_n000 + log_make, 
                 data = spam_data, family = binomial)
```

```{r}
# View the model summary
summary(glm)
confint(glm)
```

$$
\ln\left(\frac{p}{1-p}\right) =\log(\text{crl.tot}) + \log(\text{dollar}) + \log(\text{bang}) + \log(\text{money}) + \log(\text{n000})
$$

where p is the probability of "yes".

```{r}

# Fit a logistic regression model (without variable "make")
glm_model <- glm(yesno ~ log_crl.tot + log_dollar + log_bang + log_money + log_n000, 
                 data = spam_data, family = binomial)
```

```{r}
# View the model summary
summary(glm_model)
```

```{r}
confint(glm_model)
```

# Log-odds

```{r}
# Plot the model coefficients in log-odds scale
plot_model(glm_model, show.values = TRUE, transform = NULL,
           title = "Log-Odds of Spam Email Features", show.p = TRUE)
```

# Odds

```{r}
# Plot the model coefficients in odds ratio scale
plot_model(glm_model, show.values = TRUE, transform = "exp",
           title = "Odds of Spam Email Features", show.p = TRUE)
```

```{r}
# Calculate the odds ratios from the model coefficients
exp(coef(glm_model))

# Calculate probabilities from the logistic regression model
probabilities <- plogis(predict(glm_model))
head(probabilities)
```

```{r}
# Add log-odds, odds, and probabilities to the dataset
spam_data <- spam_data %>%
  mutate(logodds = predict(glm_model),
         odds = exp(logodds),
         probs = fitted(glm_model))

head(spam_data)
```

# Probabilities

```{r}
# Plot predicted probabilities for each variable
plot_model(glm_model, type = "pred", terms = "log_crl.tot [all]")
```

```{r}
plot_model(glm_model, type = "pred", terms = "log_dollar [all]")
```

```{r}
plot_model(glm_model, type = "pred", terms = "log_bang [all]")
```

```{r}
plot_model(glm_model, type = "pred", terms = "log_money [all]")
```

```{r}
plot_model(glm_model, type = "pred", terms = "log_n000 [all]")
```


